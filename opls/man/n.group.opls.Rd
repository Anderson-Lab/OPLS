% Generated by roxygen2 (4.0.1.99): do not edit by hand
\name{n.group.opls}
\alias{n.group.opls}
\title{n.group.opls}
\usage{
n.group.opls(X, Y, num_permutations, CV, nIterations = 100,
  min_num_OPLS_fact = 0)
}
\arguments{
\item{X}{- n x p matrix, where n is the number of samples and p is the number of variables.}

\item{Y}{- n x 1 matrix. Must be numeric}

\item{num_permutations}{- number of permutation for the randomization test.}

\item{CV}{- Parameter for internal cross-validation. -1 for leave-one-out cross-validation. The value of k in k-fold cross-validation otherwise.}

\item{nIterations}{- number of iterations for external validation. One of each sample is held out each iteration.}

\item{min_num_OPLS_fact}{- minimum number of OPLS factors. Default 0.}
}
\value{
List containing \item{Q2}{External Q2 value} \item{helper.results}{Results from running helper function, including an opls model, opls model history, original unique Y values, new unique Y values, and adjusted Y values}
}
\description{
Create an OPLS-DA model when there are more than 2 classes.  This function is not applicable if you have a continuous response variable. It iteratively adds classes to the model. New classes are added such that they maximize the Q2. The class label is determine by the previous model (i.e., new data is projected into the previous model).
}
\examples{
X <- rand(10,10)
new_X <- rand(5,10)
Y <- rand(12,1)
Y[1:4,] = 1
Y[5:8,] = 2
Y[9:12,] = 3
res <- n.group.opls(X,Y,100,-1)
}

